auth:
  enabled: true
  global: false
  claims:
    role: http://schemas.microsoft.com/ws/2008/06/identity/claims/role

http:
  retries: 2
  interval: 2.0
  exponential: true

useForwardedHeaders: true
passQueryString: true
forwardRequestHeaders: true
forwardResponseHeaders: true
generateRequestId: true
generateTraceId: true
useLocalUrl: true
loadBalancer:
  enabled: false
  url: localhost:9999

extensions:
  customErrors:
    includeExceptionMessage: true

  cors:
    allowCredentials: true
    allowedOrigins:
      - '*'
    allowedMethods:
      - post
      - put
      - delete
    allowedHeaders:
      - '*'
    exposedHeaders:
      - Request-ID
      - Resource-ID
      - Trace-ID
      - Total-Count

  jwt:
    issuerSigningKey: eiquief5phee9pazo0Faegaez9gohThailiur5woy2befiech1oarai4aiLi6ahVecah3ie9Aiz6Peij
    validIssuer: swiftparcel
    validateAudience: false
    validateIssuer: true
    validateLifetime: true

  swagger:
    name: SwiftParcel
    reDocEnabled: false
    title: SwiftParcel API
    version: v1
    routePrefix: docs
    includeSecurity: true

  tracing:
    serviceName: api-gateway
    udpHost: localhost
    udpPort: 6831
    maxPacketSize: 0
    sampler: const
    useEmptyTracer: false

modules:
  home:
    routes:
      - upstream: /
        method: GET
        use: return_value
        returnValue: Welcome to SwiftParcel API.
          
          
  availability:
    path: availability
    routes:
      - upstream: /resources
        method: GET
        use: downstream
        downstream: availability-service/resources
        auth: true
        
      - upstream: /resources/{resourceId}
        method: GET
        use: downstream
        downstream: availability-service/resources/{resourceId}
        auth: true
    
      - upstream: /resources
        method: POST
        use: downstream
        downstream: availability-service/resources
        auth: true
    
      - upstream: /resources/{resourceId}/reservations/{dateTime}
        method: POST
        use: downstream
        downstream: availability-service/resources/{resourceId}/reservations/{dateTime}
        auth: true
        bind:
          - resourceId:{resourceId}
          - customerId:@user_id
          - dateTime:{dateTime}
    
      - upstream: /resources/{resourceId}/reservations/{dateTime}
        method: DELETE
        use: downstream
        downstream: availability-service/resources/{resourceId}/reservations/{dateTime}
        auth: true
        bind:
          - resourceId:{resourceId}
          - dateTime:{dateTime}
    
      - upstream: /resources/{resourceId}
        method: DELETE
        use: downstream
        downstream: availability-service/resources/{resourceId}
        auth: true
        bind:
          - resourceId:{resourceId}
    
    services:
      availability-service:
        localUrl: localhost:5001
        url: availability-service
           

  identity:
    path: identity
    routes:
      - upstream: /users/{userId}
        method: GET
        use: downstream
        downstream: identity-service/users/{userId}
        auth: true
        claims:
          role: admin
    
      - upstream: /me
        method: GET
        use: downstream
        downstream: identity-service/me
        auth: true
    
      - upstream: /sign-up
        method: POST
        use: downstream
        downstream: identity-service/sign-up
        auth: false
        resourceId:
          property: userId
          generate: true
    
      - upstream: /sign-in
        method: POST
        use: downstream
        downstream: identity-service/sign-in
        auth: false
        responseHeaders:
          content-type: application/json
    
    services:
      identity-service:
        localUrl: localhost:5004
        url: identity-service
      
  # Future order service   
  orders:
    path: orders
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: orders-service/orders?customerId=@user_id
        auth: true
    
      - upstream: /{orderId}
        method: GET
        use: downstream
        downstream: orders-service/orders/{orderId}
        auth: true
    
      - upstream: /
        method: POST
        use: downstream
        downstream: orders-service/orders
        auth: true
        resourceId:
          property: orderId
          generate: true
        bind:
          - customerId:@user_id
    
      - upstream: /{orderId}
        method: DELETE
        use: downstream
        downstream: orders-service/orders/{orderId}
        auth: true
    
      - upstream: /{orderId}/parcels/{parcelId}
        method: POST
        use: downstream
        downstream: orders-service/orders/{orderId}/parcels/{parcelId}
        auth: true
        bind:
          - customerId:@user_id
          - orderId:{orderId}
          - parcelId:{parcelId}
    
      - upstream: /{orderId}/parcels/{parcelId}
        method: DELETE
        use: downstream
        downstream: orders-service/orders/{orderId}/parcels/{parcelId}
        auth: true
    
      - upstream: /{orderId}/vehicles/{vehicleId}
        method: POST
        use: downstream
        downstream: orders-service/orders/{orderId}/vehicles/{vehicleId}
        auth: true
        bind:
          - orderId:{orderId}
          - vehicleId:{vehicleId}
          - customerId:@user_id
    
    services:
      orders-service:
        localUrl: localhost:5006
        url: orders-service

  # Future parcels service   
  parcels:
    path: parcels
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: parcels-service/parcels?customerId=@user_id
        auth: true
    
      - upstream: /{parcelId}
        method: GET
        use: downstream
        downstream: parcels-service/parcels/{parcelId}
        auth: true
    
      - upstream: /volume
        method: GET
        use: downstream
        downstream: parcels-service/parcels/volume
        auth: true
    
      - upstream: /
        method: POST
        use: downstream
        downstream: parcels-service/parcels
        auth: true
        resourceId:
          property: parcelId
          generate: true
        bind:
          - customerId:@user_id
    
      - upstream: /{parcelId}
        method: DELETE
        use: downstream
        downstream: parcels-service/parcels/{parcelId}
        auth: true
    
    services:
      parcels-service:
        localUrl: localhost:5007
        url: parcels-service


  pricing:
    path: pricing
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: pricing-service/pricing?customerId=@user_id
        auth: true
    
    services:
      pricing-service:
        localUrl: localhost:5008
        url: pricing-service
      
      
  couriers:
    path: couriers
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: couriers-service/couriers
        auth: true
        onSuccess:
          data: response.data.items
    
      - upstream: /{courierId}
        method: GET
        use: downstream
        downstream: courier-service/couriers/{courierId}
        auth: true
    
      - upstream: /
        method: POST
        use: downstream
        downstream: couriers-service/couriers
        auth: true
        resourceId:
          property: courierId
          generate: true
    
      - upstream: /{courierId}
        method: PUT
        use: downstream
        downstream: couriers-service/couriers/{courierId}
        auth: true
    
      - upstream: /{courierId}
        method: DELETE
        use: downstream
        downstream: couriers-service/couriers/{couriersId}
        auth: true
    
    services:
      couriers-service:
        localUrl: localhost:5009
        url: couriers-service